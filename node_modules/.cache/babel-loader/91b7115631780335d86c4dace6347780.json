{"ast":null,"code":"var _jsxFileName = \"/home/emilio/\\xC1rea de Trabalho/OneBitCode-aulas/REACT/react-evo-III/src/components/planets/planet/index.js\";\nimport React, { Fragment, PureComponent } from \"react\";\nimport Description_Link from \"../../shared/description_with_links\";\nimport GrayImg from \"../../shared/gray_img\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getSattelities(id) {\n  let response = await fetch(`http://localhost:3000/api/${id}.json`);\n  let data = await response.json();\n  return data;\n}\n\nclass Planet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      satellites: []\n    };\n  }\n\n  componentDidMount() {\n    getSattelities().then(data => {\n      this.setState(state => ({\n        satellites: data['satellites']\n      }));\n    });\n  }\n\n}\n\nexport default Planet;","map":{"version":3,"names":["React","Fragment","PureComponent","Description_Link","GrayImg","getSattelities","id","response","fetch","data","json","Planet","Component","constructor","props","render","state","satellites","componentDidMount","then","setState"],"sources":["/home/emilio/Área de Trabalho/OneBitCode-aulas/REACT/react-evo-III/src/components/planets/planet/index.js"],"sourcesContent":["import React, { Fragment, PureComponent } from \"react\";\nimport Description_Link from \"../../shared/description_with_links\";\nimport GrayImg from \"../../shared/gray_img\";\n\nasync function getSattelities(id){ \n    let response = await fetch(`http://localhost:3000/api/${id}.json`)\n    let data = await response.json()\n    return data;\n}\n\n\n\nclass Planet extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            satellites: [\n            ]\n        }\n\n    }\n\n    componentDidMount() {\n        getSattelities().then(data => {\n            this.setState(state => ({\n                satellites: data['satellites']\n            }))\n        })\n    }\n\n    render = () => {\n        \n        return (\n            <div>\n\n            </div>\n        )\n    }\n\n\n\n}\n\nexport default Planet;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,eAAeC,cAAf,CAA8BC,EAA9B,EAAiC;EAC7B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4BF,EAAG,OAAjC,CAA1B;EACA,IAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;EACA,OAAOD,IAAP;AACH;;AAID,MAAME,MAAN,SAAqBX,KAAK,CAACY,SAA3B,CAAqC;EACjCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAiBnBC,MAjBmB,GAiBV,MAAM;MAEX,oBACI;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CAxBkB;;IAEf,KAAKC,KAAL,GAAa;MACTC,UAAU,EAAE;IADH,CAAb;EAKH;;EAEDC,iBAAiB,GAAG;IAChBb,cAAc,GAAGc,IAAjB,CAAsBV,IAAI,IAAI;MAC1B,KAAKW,QAAL,CAAcJ,KAAK,KAAK;QACpBC,UAAU,EAAER,IAAI,CAAC,YAAD;MADI,CAAL,CAAnB;IAGH,CAJD;EAKH;;AAhBgC;;AA+BrC,eAAeE,MAAf"},"metadata":{},"sourceType":"module"}