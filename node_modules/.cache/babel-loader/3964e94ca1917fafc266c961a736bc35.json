{"ast":null,"code":"'use strict'; // https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\n\nconst PLUGIN_NAME = 'caching_sha2_password';\n\nconst crypto = require('crypto');\n\nconst {\n  xor,\n  xorRotating\n} = require('../auth_41');\n\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\nconst STATE_INITIAL = 0;\nconst STATE_TOKEN_SENT = 1;\nconst STATE_WAIT_SERVER_KEY = 2;\nconst STATE_FINAL = -1;\n\nfunction sha256(msg) {\n  const hash = crypto.createHash('sha256');\n  hash.update(msg, 'binary');\n  return hash.digest('binary');\n}\n\nfunction calculateToken(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n\n  const stage1 = sha256(Buffer.from(password, 'utf8').toString('binary'));\n  const stage2 = sha256(stage1);\n  const stage3 = sha256(stage2 + scramble.toString('binary'));\n  return xor(stage1, stage3);\n}\n\nfunction encrypt(password, scramble, key) {\n  const stage1 = xorRotating(Buffer.from(`${password}\\0`, 'utf8').toString('binary'), scramble.toString('binary'));\n  return crypto.publicEncrypt(key, stage1);\n}\n\nmodule.exports = function () {\n  let pluginOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _ref => {\n    let {\n      connection\n    } = _ref;\n    let state = 0;\n    let scramble = null;\n    const password = connection.config.password;\n\n    const authWithKey = serverKey => {\n      const _password = encrypt(password, scramble, serverKey);\n\n      state = STATE_FINAL;\n      return _password;\n    };\n\n    return data => {\n      switch (state) {\n        case STATE_INITIAL:\n          scramble = data.slice(0, 20);\n          state = STATE_TOKEN_SENT;\n          return calculateToken(password, scramble);\n\n        case STATE_TOKEN_SENT:\n          if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\n            state = STATE_FINAL;\n            return null;\n          }\n\n          if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\n            const isSecureConnection = typeof pluginOptions.overrideIsSecure === 'undefined' ? connection.config.ssl || connection.config.socketPath : pluginOptions.overrideIsSecure;\n\n            if (isSecureConnection) {\n              state = STATE_FINAL;\n              return Buffer.from(`${password}\\0`, 'utf8');\n            } // if client provides key we can save one extra roundrip on first connection\n\n\n            if (pluginOptions.serverPublicKey) {\n              return authWithKey(pluginOptions.serverPublicKey);\n            }\n\n            state = STATE_WAIT_SERVER_KEY;\n            return REQUEST_SERVER_KEY_PACKET;\n          }\n\n          throw new Error(`Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`);\n\n        case STATE_WAIT_SERVER_KEY:\n          if (pluginOptions.onServerPublicKey) {\n            pluginOptions.onServerPublicKey(data);\n          }\n\n          return authWithKey(data);\n\n        case STATE_FINAL:\n          throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`);\n      }\n\n      throw new Error(`Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`);\n    };\n  };\n};","map":{"version":3,"names":["PLUGIN_NAME","crypto","require","xor","xorRotating","REQUEST_SERVER_KEY_PACKET","Buffer","from","FAST_AUTH_SUCCESS_PACKET","PERFORM_FULL_AUTHENTICATION_PACKET","STATE_INITIAL","STATE_TOKEN_SENT","STATE_WAIT_SERVER_KEY","STATE_FINAL","sha256","msg","hash","createHash","update","digest","calculateToken","password","scramble","alloc","stage1","toString","stage2","stage3","encrypt","key","publicEncrypt","module","exports","pluginOptions","connection","state","config","authWithKey","serverKey","_password","data","slice","equals","isSecureConnection","overrideIsSecure","ssl","socketPath","serverPublicKey","Error","onServerPublicKey"],"sources":["/home/emilio/Área de Trabalho/OneBitCode-aulas/REACT/site-react-login-live/react-controlledForms/node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js"],"sourcesContent":["'use strict';\n\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\n\nconst PLUGIN_NAME = 'caching_sha2_password';\nconst crypto = require('crypto');\nconst { xor, xorRotating } = require('../auth_41');\n\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\n\nconst STATE_INITIAL = 0;\nconst STATE_TOKEN_SENT = 1;\nconst STATE_WAIT_SERVER_KEY = 2;\nconst STATE_FINAL = -1;\n\nfunction sha256(msg) {\n  const hash = crypto.createHash('sha256');\n  hash.update(msg, 'binary');\n  return hash.digest('binary');\n}\n\nfunction calculateToken(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  const stage1 = sha256(Buffer.from(password, 'utf8').toString('binary'));\n  const stage2 = sha256(stage1);\n  const stage3 = sha256(stage2 + scramble.toString('binary'));\n  return xor(stage1, stage3);\n}\n\nfunction encrypt(password, scramble, key) {\n  const stage1 = xorRotating(\n    Buffer.from(`${password}\\0`, 'utf8').toString('binary'),\n    scramble.toString('binary')\n  );\n  return crypto.publicEncrypt(key, stage1);\n}\n\nmodule.exports = (pluginOptions = {}) => ({ connection }) => {\n  let state = 0;\n  let scramble = null;\n\n  const password = connection.config.password;\n\n  const authWithKey = serverKey => {\n    const _password = encrypt(password, scramble, serverKey);\n    state = STATE_FINAL;\n    return _password;\n  };\n\n  return data => {\n    switch (state) {\n      case STATE_INITIAL:\n        scramble = data.slice(0, 20);\n        state = STATE_TOKEN_SENT;\n        return calculateToken(password, scramble);\n\n      case STATE_TOKEN_SENT:\n        if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\n          state = STATE_FINAL;\n          return null;\n        }\n\n        if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\n          const isSecureConnection =\n            typeof pluginOptions.overrideIsSecure === 'undefined'\n              ? connection.config.ssl || connection.config.socketPath\n              : pluginOptions.overrideIsSecure;\n          if (isSecureConnection) {\n            state = STATE_FINAL;\n            return Buffer.from(`${password}\\0`, 'utf8');\n          }\n\n          // if client provides key we can save one extra roundrip on first connection\n          if (pluginOptions.serverPublicKey) {\n            return authWithKey(pluginOptions.serverPublicKey);\n          }\n\n          state = STATE_WAIT_SERVER_KEY;\n          return REQUEST_SERVER_KEY_PACKET;\n        }\n        throw new Error(\n          `Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`\n        );\n      case STATE_WAIT_SERVER_KEY:\n        if (pluginOptions.onServerPublicKey) {\n          pluginOptions.onServerPublicKey(data);\n        }\n        return authWithKey(data);\n      case STATE_FINAL:\n        throw new Error(\n          `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\n        );\n    }\n\n    throw new Error(\n      `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\n    );\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}