{"ast":null,"code":"var _jsxFileName = \"/home/emilio/\\xC1rea de Trabalho/OneBitCode-aulas/REACT/react-hooks/src/components/planets/planet/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, PureComponent, useState } from \"react\";\nimport Planets from \"..\";\nimport Description_Link from \"../../shared/description_with_links\";\nimport GrayImg from \"../../shared/gray_img\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getSattelites(id) {\n  let response = await fetch(`http://localhost:3000/api/${id}.json`);\n  let data = await response.json();\n  return data;\n}\n\nconst Planet = props => {\n  _s();\n\n  const [satellites, setPlanet] = useState(getSattelites);\n  let title;\n\n  if (props.title_with_underline) {\n    title = /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this);\n  }\n\n  {\n    title = /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [title, /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Description_Link, {\n      description: props.description,\n      link: props.link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(GrayImg, {\n      img_url: props.img_url,\n      gray: props.gray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Satellites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: satellites.map((satellite, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: satellite.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Planet, \"4kWCfbKoJLQmUXdnFkP8TYqaVnc=\");\n\n_c = Planet;\nexport default Planet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planet\");","map":{"version":3,"names":["React","Fragment","PureComponent","useState","Planets","Description_Link","GrayImg","getSattelites","id","response","fetch","data","json","Planet","props","satellites","setPlanet","title","title_with_underline","name","description","link","img_url","gray","map","satellite","index"],"sources":["/home/emilio/Área de Trabalho/OneBitCode-aulas/REACT/react-hooks/src/components/planets/planet/index.js"],"sourcesContent":["import React, { Fragment, PureComponent, useState } from \"react\";\nimport Planets from \"..\";\nimport Description_Link from \"../../shared/description_with_links\";\nimport GrayImg from \"../../shared/gray_img\";\n\nasync function getSattelites(id){ \n    let response = await fetch(`http://localhost:3000/api/${id}.json`)\n    let data = await response.json()\n    return data;\n}\n\nconst Planet = (props) => {\n    const [satellites, setPlanet] = useState(getSattelites)\n\n        \n    let title;\n    if (props.title_with_underline) {\n        title = <h4><u>{props.name}</u></h4>\n    } {\n        title = <h4>{props.name}</h4>\n    }\n        return (\n            <div>\n                {title}\n                <p />\n                <Description_Link description={props.description} link={props.link}/>\n                <GrayImg img_url={props.img_url} gray={props.gray}/>\n                <h4>Satellites</h4>\n                <ul>\n                {satellites.map((satellite, index) => \n                    <li key={index}>{satellite.name}</li>\n                )}\n                </ul>\n                <hr/>   \n            </div>\n        )\n}\n\nexport default Planet;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,OAAOC,OAAP,MAAoB,IAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,eAAeC,aAAf,CAA6BC,EAA7B,EAAgC;EAC5B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4BF,EAAG,OAAjC,CAA1B;EACA,IAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;EACA,OAAOD,IAAP;AACH;;AAED,MAAME,MAAM,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,UAAD,EAAaC,SAAb,IAA0Bb,QAAQ,CAACI,aAAD,CAAxC;EAGA,IAAIU,KAAJ;;EACA,IAAIH,KAAK,CAACI,oBAAV,EAAgC;IAC5BD,KAAK,gBAAG;MAAA,uBAAI;QAAA,UAAIH,KAAK,CAACK;MAAV;QAAA;QAAA;QAAA;MAAA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAAR;EACH;;EAAC;IACEF,KAAK,gBAAG;MAAA,UAAKH,KAAK,CAACK;IAAX;MAAA;MAAA;MAAA;IAAA,QAAR;EACH;EACG,oBACI;IAAA,WACKF,KADL,eAEI;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,gBAAD;MAAkB,WAAW,EAAEH,KAAK,CAACM,WAArC;MAAkD,IAAI,EAAEN,KAAK,CAACO;IAA9D;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII,QAAC,OAAD;MAAS,OAAO,EAAEP,KAAK,CAACQ,OAAxB;MAAiC,IAAI,EAAER,KAAK,CAACS;IAA7C;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAMI;MAAA,UACCR,UAAU,CAACS,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,kBACZ;QAAA,UAAiBD,SAAS,CAACN;MAA3B,GAASO,KAAT;QAAA;QAAA;QAAA;MAAA,QADH;IADD;MAAA;MAAA;MAAA;IAAA,QANJ,eAWI;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeP,CAzBD;;GAAMb,M;;KAAAA,M;AA2BN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}