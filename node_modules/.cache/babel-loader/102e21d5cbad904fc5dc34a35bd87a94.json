{"ast":null,"code":"'use strict'; // Manually extracted from mysql-5.5.23/include/mysql_com.h\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\n\nexports.DECIMAL = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\n\nexports.TINY = 0x01; // aka TINYINT, 1 byte\n\nexports.SHORT = 0x02; // aka SMALLINT, 2 bytes\n\nexports.LONG = 0x03; // aka INT, 4 bytes\n\nexports.FLOAT = 0x04; // aka FLOAT, 4-8 bytes\n\nexports.DOUBLE = 0x05; // aka DOUBLE, 8 bytes\n\nexports.NULL = 0x06; // NULL (used for prepared statements, I think)\n\nexports.TIMESTAMP = 0x07; // aka TIMESTAMP\n\nexports.LONGLONG = 0x08; // aka BIGINT, 8 bytes\n\nexports.INT24 = 0x09; // aka MEDIUMINT, 3 bytes\n\nexports.DATE = 0x0a; // aka DATE\n\nexports.TIME = 0x0b; // aka TIME\n\nexports.DATETIME = 0x0c; // aka DATETIME\n\nexports.YEAR = 0x0d; // aka YEAR, 1 byte (don't ask)\n\nexports.NEWDATE = 0x0e; // aka ?\n\nexports.VARCHAR = 0x0f; // aka VARCHAR (?)\n\nexports.BIT = 0x10; // aka BIT, 1-8 byte\n\nexports.JSON = 0xf5;\nexports.NEWDECIMAL = 0xf6; // aka DECIMAL\n\nexports.ENUM = 0xf7; // aka ENUM\n\nexports.SET = 0xf8; // aka SET\n\nexports.TINY_BLOB = 0xf9; // aka TINYBLOB, TINYTEXT\n\nexports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\n\nexports.LONG_BLOB = 0xfb; // aka LONGBLOG, LONGTEXT\n\nexports.BLOB = 0xfc; // aka BLOB, TEXT\n\nexports.VAR_STRING = 0xfd; // aka VARCHAR, VARBINARY\n\nexports.STRING = 0xfe; // aka CHAR, BINARY\n\nexports.GEOMETRY = 0xff; // aka GEOMETRY","map":{"version":3,"names":["exports","DECIMAL","TINY","SHORT","LONG","FLOAT","DOUBLE","NULL","TIMESTAMP","LONGLONG","INT24","DATE","TIME","DATETIME","YEAR","NEWDATE","VARCHAR","BIT","JSON","NEWDECIMAL","ENUM","SET","TINY_BLOB","MEDIUM_BLOB","LONG_BLOB","BLOB","VAR_STRING","STRING","GEOMETRY"],"sources":["/home/emilio/√Årea de Trabalho/OneBitCode-aulas/REACT/site-react-login-live/react-controlledForms/node_modules/mysql2/lib/constants/types.js"],"sourcesContent":["'use strict';\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\nexports.DECIMAL = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\nexports.TINY = 0x01; // aka TINYINT, 1 byte\nexports.SHORT = 0x02; // aka SMALLINT, 2 bytes\nexports.LONG = 0x03; // aka INT, 4 bytes\nexports.FLOAT = 0x04; // aka FLOAT, 4-8 bytes\nexports.DOUBLE = 0x05; // aka DOUBLE, 8 bytes\nexports.NULL = 0x06; // NULL (used for prepared statements, I think)\nexports.TIMESTAMP = 0x07; // aka TIMESTAMP\nexports.LONGLONG = 0x08; // aka BIGINT, 8 bytes\nexports.INT24 = 0x09; // aka MEDIUMINT, 3 bytes\nexports.DATE = 0x0a; // aka DATE\nexports.TIME = 0x0b; // aka TIME\nexports.DATETIME = 0x0c; // aka DATETIME\nexports.YEAR = 0x0d; // aka YEAR, 1 byte (don't ask)\nexports.NEWDATE = 0x0e; // aka ?\nexports.VARCHAR = 0x0f; // aka VARCHAR (?)\nexports.BIT = 0x10; // aka BIT, 1-8 byte\nexports.JSON = 0xf5;\nexports.NEWDECIMAL = 0xf6; // aka DECIMAL\nexports.ENUM = 0xf7; // aka ENUM\nexports.SET = 0xf8; // aka SET\nexports.TINY_BLOB = 0xf9; // aka TINYBLOB, TINYTEXT\nexports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\nexports.LONG_BLOB = 0xfb; // aka LONGBLOG, LONGTEXT\nexports.BLOB = 0xfc; // aka BLOB, TEXT\nexports.VAR_STRING = 0xfd; // aka VARCHAR, VARBINARY\nexports.STRING = 0xfe; // aka CHAR, BINARY\nexports.GEOMETRY = 0xff; // aka GEOMETRY\n"],"mappings":"AAAA,a,CAEA;AACA;;AACAA,OAAO,CAACC,OAAR,GAAkB,IAAlB,C,CAAwB;;AACxBD,OAAO,CAACE,IAAR,GAAe,IAAf,C,CAAqB;;AACrBF,OAAO,CAACG,KAAR,GAAgB,IAAhB,C,CAAsB;;AACtBH,OAAO,CAACI,IAAR,GAAe,IAAf,C,CAAqB;;AACrBJ,OAAO,CAACK,KAAR,GAAgB,IAAhB,C,CAAsB;;AACtBL,OAAO,CAACM,MAAR,GAAiB,IAAjB,C,CAAuB;;AACvBN,OAAO,CAACO,IAAR,GAAe,IAAf,C,CAAqB;;AACrBP,OAAO,CAACQ,SAAR,GAAoB,IAApB,C,CAA0B;;AAC1BR,OAAO,CAACS,QAAR,GAAmB,IAAnB,C,CAAyB;;AACzBT,OAAO,CAACU,KAAR,GAAgB,IAAhB,C,CAAsB;;AACtBV,OAAO,CAACW,IAAR,GAAe,IAAf,C,CAAqB;;AACrBX,OAAO,CAACY,IAAR,GAAe,IAAf,C,CAAqB;;AACrBZ,OAAO,CAACa,QAAR,GAAmB,IAAnB,C,CAAyB;;AACzBb,OAAO,CAACc,IAAR,GAAe,IAAf,C,CAAqB;;AACrBd,OAAO,CAACe,OAAR,GAAkB,IAAlB,C,CAAwB;;AACxBf,OAAO,CAACgB,OAAR,GAAkB,IAAlB,C,CAAwB;;AACxBhB,OAAO,CAACiB,GAAR,GAAc,IAAd,C,CAAoB;;AACpBjB,OAAO,CAACkB,IAAR,GAAe,IAAf;AACAlB,OAAO,CAACmB,UAAR,GAAqB,IAArB,C,CAA2B;;AAC3BnB,OAAO,CAACoB,IAAR,GAAe,IAAf,C,CAAqB;;AACrBpB,OAAO,CAACqB,GAAR,GAAc,IAAd,C,CAAoB;;AACpBrB,OAAO,CAACsB,SAAR,GAAoB,IAApB,C,CAA0B;;AAC1BtB,OAAO,CAACuB,WAAR,GAAsB,IAAtB,C,CAA4B;;AAC5BvB,OAAO,CAACwB,SAAR,GAAoB,IAApB,C,CAA0B;;AAC1BxB,OAAO,CAACyB,IAAR,GAAe,IAAf,C,CAAqB;;AACrBzB,OAAO,CAAC0B,UAAR,GAAqB,IAArB,C,CAA2B;;AAC3B1B,OAAO,CAAC2B,MAAR,GAAiB,IAAjB,C,CAAuB;;AACvB3B,OAAO,CAAC4B,QAAR,GAAmB,IAAnB,C,CAAyB"},"metadata":{},"sourceType":"script"}