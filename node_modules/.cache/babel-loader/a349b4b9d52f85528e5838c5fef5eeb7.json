{"ast":null,"code":"var _jsxFileName = \"/home/emilio/\\xC1rea de Trabalho/OneBitCode-aulas/REACT/react-hooks/src/components/planets/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport Planet from \"./planet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getPlanets() {\n  let response = await fetch(\"http://localhost:3000/api/planets.json\");\n  let data = await response.json();\n  return data;\n} // componentDidMount() {\n//     getPlanets().then(data => {\n//         this.setState(state => ({\n//             planets: data['planets']\n//         }))\n//     })\n// }\n\n\nconst Planets = () => {\n  _s();\n\n  const [planets, setPlanets] = useState([fetch(\"http://localhost:3000/api/planets.json\")]);\n\n  const removeLast = () => {\n    let new_planets = [...planets];\n    new_planets.pop();\n    setPlanets(new_planets);\n  };\n\n  const duplicateLastPlanet = () => {\n    let last_planet = planets[planets.length - 1];\n    setPlanets([...planets, last_planet]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Planets list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: removeLast,\n      children: \"Remove Last\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: duplicateLastPlanet,\n      children: \"Duplicate Last\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), planets.map((planet, index) => /*#__PURE__*/_jsxDEV(Planet, {\n      id: planet.id,\n      name: planet.name,\n      description: planet.description,\n      img_url: planet.img_url,\n      link: planet.link\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Planets, \"5EZcFgt+bCgk9xTR1U5GmxYRk3I=\");\n\n_c = Planets;\nexport default Planets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","Fragment","useState","Planet","getPlanets","response","fetch","data","json","Planets","planets","setPlanets","removeLast","new_planets","pop","duplicateLastPlanet","last_planet","length","map","planet","index","id","name","description","img_url","link"],"sources":["/home/emilio/Área de Trabalho/OneBitCode-aulas/REACT/react-hooks/src/components/planets/index.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport Planet from \"./planet\";\n\nasync function getPlanets() {\n    let response = await fetch(\"http://localhost:3000/api/planets.json\")\n    let data = await response.json()\n    return data;\n}\n\n// componentDidMount() {\n//     getPlanets().then(data => {\n//         this.setState(state => ({\n//             planets: data['planets']\n//         }))\n//     })\n// }\n\nconst Planets = () => {\n    const [planets, setPlanets] = useState([\n        fetch(\"http://localhost:3000/api/planets.json\")])\n    \n    \n    const removeLast = () => {\n        let new_planets = [...planets]\n        new_planets.pop()\n        setPlanets(new_planets)\n        }\n\n    const duplicateLastPlanet = () => {\n        let last_planet = planets[planets.length - 1]\n        setPlanets([...planets, last_planet]\n        )\n    }\n\n    return (\n        <Fragment>\n            <h3>Planets list</h3>\n            <button onClick={removeLast}>Remove Last</button>\n            <button onClick={duplicateLastPlanet}>Duplicate Last</button>\n            <hr />\n            {planets.map((planet, index) =>\n                <Planet\n                    id={planet.id}\n                    name={planet.name}\n                    description={planet.description}\n                    img_url={planet.img_url}\n                    link={planet.link}\n                    key={index}\n                />\n            )}\n        </Fragment>\n    )\n}\nexport default Planets;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,eAAeC,UAAf,GAA4B;EACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,CAA1B;EACA,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;EACA,OAAOD,IAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CACnCI,KAAK,CAAC,wCAAD,CAD8B,CAAD,CAAtC;;EAIA,MAAMM,UAAU,GAAG,MAAM;IACrB,IAAIC,WAAW,GAAG,CAAC,GAAGH,OAAJ,CAAlB;IACAG,WAAW,CAACC,GAAZ;IACAH,UAAU,CAACE,WAAD,CAAV;EACC,CAJL;;EAMA,MAAME,mBAAmB,GAAG,MAAM;IAC9B,IAAIC,WAAW,GAAGN,OAAO,CAACA,OAAO,CAACO,MAAR,GAAiB,CAAlB,CAAzB;IACAN,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaM,WAAb,CAAD,CAAV;EAEH,CAJD;;EAMA,oBACI,QAAC,QAAD;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEJ,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAEG,mBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAA;MAAA;MAAA;IAAA,QAJJ,EAKKL,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACT,QAAC,MAAD;MACI,EAAE,EAAED,MAAM,CAACE,EADf;MAEI,IAAI,EAAEF,MAAM,CAACG,IAFjB;MAGI,WAAW,EAAEH,MAAM,CAACI,WAHxB;MAII,OAAO,EAAEJ,MAAM,CAACK,OAJpB;MAKI,IAAI,EAAEL,MAAM,CAACM;IALjB,GAMSL,KANT;MAAA;MAAA;MAAA;IAAA,QADH,CALL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CAnCD;;GAAMX,O;;KAAAA,O;AAoCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}